# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none
pr: none

pool:
  vmImage: 'windows-2019'

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  graphDocsRepo: 'https://github.com/andrueastman/microsoft-graph-docs.git'
  graphDocsBranch: 'master'
  snippetInjectionRepo: 'https://github.com/andrueastman/apidoctor.git'
  snippetInjectionBranch: 'rework-snippet-injection'
  graphDocsPath: 'GraphDocs'
  snippetInjectionPath: 'ApiDoctor'
  solution: '$(snippetInjectionPath)/**/*.sln'
  executable: '$(snippetInjectionPath)/ApiDoctor.Console/bin/Release/apidoc.exe'

steps:
- task: PowerShell@1
  displayName: "Clone Microsoft Graph Docs"
  inputs:
    scriptType: inlineScript
    inlineScript: "git clone -b '$(graphDocsBranch)' '$(graphDocsRepo)' --recurse-submodules '$(graphDocsPath)' 2>&1 | Write-Host"

- task: PowerShell@1
  displayName: "Clone Snippet injection tool"
  inputs:
    scriptType: inlineScript
    inlineScript: "git clone -b '$(snippetInjectionBranch)' '$(snippetInjectionRepo)' --recurse-submodules '$(snippetInjectionPath)' 2>&1 | Write-Host"

- task: NuGetToolInstaller@0
  displayName: "Install Nuget.exe"

- task: NuGetCommand@2
  displayName: "Restore Packages for  Snippets Injection Tool"
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  displayName: "Build Source for Snippets Injection Tool"
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: CmdLine@2
  displayName: "Run snippet injection against docs"
  inputs:
    script: |
      ApiDoctor\\ApiDoctor.Console\\bin\\Release\\apidoc.exe
      